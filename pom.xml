<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.graphqlio</groupId>
	<artifactId>websocket-framed-java</artifactId>
	<version>0.0.9</version>
	<name>WebSocket Framed</name>
	<description>WebSocket Framed</description>

	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<!-- 
        <junit.jupiter.version>5.5.2</junit.jupiter.version>
        <junit.platform.version>1.5.2</junit.platform.version>
         -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.2.0.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>co.nstant.in</groupId>
			<artifactId>cbor</artifactId>
			<version>0.8</version>
		</dependency>

		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
		  <groupId>com.fasterxml.jackson.dataformat</groupId>
		  <artifactId>jackson-dataformat-cbor</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.msgpack</groupId>
		    <artifactId>msgpack-core</artifactId>
		    <version>0.8.3</version>
		</dependency>


		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <!-- <version>${junit.jupiter.version}</version> -->
		</dependency>
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <!-- <version>${junit.platform.version}</version> -->
		    <scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
			</plugin>		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>

			</plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-jar-plugin</artifactId>
		      <version>3.2.0</version>
		      <configuration>
		      <!-- 
		      	Hiermit werden die Samples-Klassen nicht ins jar exportiert.
		      	Leider werden die Samples-Resources weiterhin exportiert.
		       -->
		        <excludes>
		        	<exclude>**/samples/**/*</exclude>
		        </excludes>
		      </configuration>
		    </plugin>

			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>build-helper-maven-plugin</artifactId>
			  <version>3.0.0</version>
			  <executions>
			  <!-- 
			  	Hiermit werden die Samples-Sourcen in den eclipse-Build-Path aufgenommen.
			  	(bei Import des Maven-Projekts)
			   -->
				  <execution>
				    <id>add-source</id>
				    <phase>generate-sources</phase>
				    <goals>
				      <goal>add-source</goal>
				    </goals>
				    <configuration>
				      <sources>
				        <source>src/samples/java</source>
				      </sources>
				    </configuration>
				  </execution>
			  <!-- 
			  	Hiermit werden die Samples-Resourcen in den eclipse-Build-Path aufgenommen.
			  	(bei Import des Maven-Projekts)
			  	Der targetPath ist dabei nicht ganz klar:
			  	bei jar-Export werden die Samples-Resourcen an eine 'komische' Stelle kopiert.
			   -->
		          <execution>
		            <id>add-resource</id>
		            <phase>generate-resources</phase>
		            <goals>
		              <goal>add-resource</goal>
		            </goals>
		            <configuration>
		              <resources>
		                <resource>
		                  <directory>src/samples/resources</directory>
		                  <targetPath>src/samples/resources</targetPath>
		                </resource>
		              </resources>
		            </configuration>
		          </execution>
			  </executions>
			</plugin>

		</plugins>
	</build>
	

</project>
